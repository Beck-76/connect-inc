<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Chat Room - Connect Inc.</title>
  <link href="https://fonts.googleapis.com/css2?family=Bebas+Neue&family=Roboto:wght@400;700&display=swap" rel="stylesheet" />
  <style>
    body {
      margin: 0;
      font-family: 'Roboto', sans-serif;
      background: url('https://upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Flag_of_the_United_States.svg/2560px-Flag_of_the_United_States.svg.png') no-repeat center center fixed;
      background-size: cover;
      color: #fff;
    }
    header {
      background-color: rgba(0, 40, 104, 0.95);
      padding: 1rem 2rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    header h1 {
      font-family: 'Bebas Neue', cursive;
      font-size: 2rem;
      margin: 0;
      color: #fff;
    }
    .dropdown {
      position: relative;
      display: inline-block;
    }
    .dropbtn {
      background-color: #fff;
      color: #002868;
      padding: 10px 16px;
      font-size: 1rem;
      border: none;
      cursor: pointer;
      font-weight: bold;
      border-radius: 5px;
    }
    .dropdown-content {
      display: none;
      position: absolute;
      right: 0;
      background-color: white;
      min-width: 160px;
      box-shadow: 0 8px 16px rgba(0,0,0,0.2);
      z-index: 1;
    }
    .dropdown-content a {
      color: #002868;
      padding: 12px 16px;
      text-decoration: none;
      display: block;
      font-weight: bold;
    }
    .dropdown-content a:hover {
      background-color: #ddd;
    }
    .dropdown:hover .dropdown-content {
      display: block;
    }
    main {
      padding: 2rem;
      max-width: 800px;
      margin: 0 auto;
      background-color: rgba(0, 0, 0, 0.6);
      border-radius: 10px;
      margin-top: 2rem;
    }
    h2 {
      font-family: 'Bebas Neue', cursive;
      font-size: 2rem;
      color: #fff;
      margin-bottom: 1rem;
      text-align: center;
    }
    .chat-box {
      border: 2px solid #fff;
      height: 400px;
      overflow-y: auto;
      padding: 1rem;
      background-color: rgba(255, 255, 255, 0.1);
      border-radius: 8px;
      margin-bottom: 1rem;
    }
    .chat-message {
      margin-bottom: 10px;
      background: rgba(255, 255, 255, 0.2);
      padding: 0.5rem 1rem;
      border-radius: 5px;
    }
    .timestamp {
      font-size: 0.75rem;
      color: #ccc;
      margin-left: 10px;
    }
    .bot-message {
      background: rgba(0, 40, 104, 0.5);
    }
    .input-area {
      display: flex;
      gap: 0.5rem;
      margin-bottom: 1rem;
    }
    .input-area input {
      flex: 1;
      padding: 0.75rem;
      font-size: 1rem;
      border-radius: 5px;
      border: none;
    }
    .input-area button {
      padding: 0.75rem 1.2rem;
      background-color: #002868;
      color: #fff;
      font-weight: bold;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
    .suggestions {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
      justify-content: center;
      margin-bottom: 1rem;
    }
    .suggestions button {
      background-color: #fff;
      color: #002868;
      border: none;
      padding: 0.5rem 1rem;
      border-radius: 5px;
      font-weight: bold;
      cursor: pointer;
    }
    .typing-indicator {
      font-style: italic;
      color: #ccc;
      margin-bottom: 1rem;
    }
    .welcome-banner {
      text-align: center;
      font-size: 1.2rem;
      margin-bottom: 1rem;
    }
    .logout-button {
      background: none;
      border: none;
      color: #ccc;
      text-decoration: underline;
      cursor: pointer;
      font-size: 0.9rem;
      margin-bottom: 1rem;
    }

    /* Modal Styles */
    .modal {
      position: fixed;
      z-index: 9999;
      top: 0; left: 0;
      width: 100%; height: 100%;
      background-color: rgba(0, 0, 0, 0.85);
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .modal-content {
      background: #fff;
      padding: 2rem;
      border-radius: 10px;
      color: #002868;
      max-width: 400px;
      width: 90%;
      text-align: center;
    }
    .modal-content input {
      width: 100%;
      padding: 0.75rem;
      margin: 0.5rem 0;
      font-size: 1rem;
      border-radius: 5px;
      border: 1px solid #ccc;
    }
    .modal-content button {
      background-color: #002868;
      color: #fff;
      font-weight: bold;
      padding: 0.75rem 1.5rem;
      border: none;
      border-radius: 5px;
      margin-top: 1rem;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <div class="modal" id="loginModal">
    <div class="modal-content">
      <h2>Enter Chat</h2>
      <input type="text" id="usernameInput" placeholder="Your Name (required)" required />
      <input type="email" id="emailInput" placeholder="Email (optional)" />
      <button onclick="enterChat()">Enter Chat</button>
    </div>
  </div>

  <header>
    <h1>Connect Inc. üóΩ</h1>
    <div class="dropdown">
      <button class="dropbtn">‚ò∞ Menu</button>
      <div class="dropdown-content">
        <a href="index.html">Home</a>
        <a href="house.html">House</a>
        <a href="senate.html">Senate</a>
        <a href="chat.html">Chat</a>
      </div>
    </div>
  </header>

  <main>
    <h2>Chat Room</h2>
    <div class="welcome-banner" id="welcomeBanner"></div>
    <button class="logout-button" onclick="logout()">Logout</button>
    <div class="chat-box" id="chatBox"></div>
    <div class="typing-indicator" id="typingIndicator" style="display:none;">CivBot is typing...</div>
    <div class="suggestions">
      <button onclick="quickMessage('Who is the President?')">üá∫üá∏ President</button>
      <button onclick="quickMessage('How do I vote?')">üó≥Ô∏è Voting Info</button>
      <button onclick="quickMessage('Tell me a fact')">üìú Civics Fact</button>
    </div>
    <div class="input-area">
      <input type="text" id="messageInput" placeholder="Type your message..." />
      <button onclick="sendMessage()">Send</button>
    </div>
  </main>

  <footer>
    Speak freely. Respect all voices. üá∫üá∏
  </footer>

  <script>
    const chatBox = document.getElementById('chatBox');
    const messageInput = document.getElementById('messageInput');
    const typingIndicator = document.getElementById('typingIndicator');
    const loginModal = document.getElementById('loginModal');
    const usernameInput = document.getElementById('usernameInput');
    const welcomeBanner = document.getElementById('welcomeBanner');

    const civicsFacts = [
      "The U.S. Constitution was signed in 1787.",
      "There are 435 voting members in the House of Representatives.",
      "A U.S. Senator serves a 6-year term.",
      "The First Amendment protects freedom of speech and religion.",
      "George Washington was the first President of the United States."
    ];

    let username = localStorage.getItem('chatUsername') || '';

    if (!username) {
      loginModal.style.display = 'flex';
    } else {
      welcomeBanner.textContent = `Welcome ${username}!`;
    }

    function enterChat() {
      const name = usernameInput.value.trim();
      if (name === '') {
        alert("Please enter your name to continue.");
        return;
      }
      localStorage.setItem('chatUsername', name);
      username = name;
      welcomeBanner.textContent = `Welcome ${username}!`;
      loginModal.style.display = 'none';
    }

    function logout() {
      localStorage.removeItem('chatUsername');
      location.reload();
    }

    function addMessage(text, isBot = false) {
      const messageEl = document.createElement('div');
      messageEl.className = 'chat-message' + (isBot ? ' bot-message' : '');
      const timestamp = new Date().toLocaleTimeString();
      const namePrefix = isBot ? '' : `üßë ${username}: `;
      messageEl.innerHTML = `${namePrefix}${text} <span class="timestamp">${timestamp}</span>`;
      chatBox.appendChild(messageEl);
      chatBox.scrollTop = chatBox.scrollHeight;
    }

    function showTyping() {
      typingIndicator.style.display = 'block';
    }

    function hideTyping() {
      typingIndicator.style.display = 'none';
    }

    function getBotResponse(message) {
      const lower = message.toLowerCase();
      if (lower.includes("president")) return `üá∫üá∏ The President is Donald J. Trump.`;
      if (lower.includes("speaker")) return "üì¢ The Speaker of the House is Mike Johnson.";
      if (lower.includes("vote")) return "üó≥Ô∏è You can register to vote at vote.gov.";
      if (lower.includes("fact")) return "üìú " + civicsFacts[Math.floor(Math.random() * civicsFacts.length)];
      if (lower.includes("i just voted")) return "üéâ üá∫üá∏ Thank you for voting ‚Äî your voice matters!";
      return `ü§ñ Hi ${username}! I'm CivBot. Ask me about U.S. government, voting, or civics.`;
    }

    function sendMessage() {
      const message = messageInput.value.trim();
      if (message !== '') {
        addMessage(message);
        messageInput.value = '';
        showTyping();
        setTimeout(() => {
          hideTyping();
          const botReply = getBotResponse(message);
          addMessage(botReply, true);
        }, 1000);
      }
    }

    function quickMessage(text) {
      messageInput.value = text;
      sendMessage();
    }

    messageInput.addEventListener('keypress', function (e) {
      if (e.key === 'Enter') {
        sendMessage();
      }
    });
  </script>
</body>
</html>
