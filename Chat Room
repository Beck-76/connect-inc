<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Chat Room - Connect Inc.</title>
<style>
  @import url('https://fonts.googleapis.com/css2?family=Roboto+Mono&display=swap');

  /* Background with American flag watermark */
  body {
    margin: 0;
    font-family: 'Roboto Mono', monospace;
    background: 
      url('https://upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Flag_of_the_United_States.svg/2560px-Flag_of_the_United_States.svg.png') no-repeat center center fixed;
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    background-attachment: fixed;
    background-color: #f0f2f5;
    display: flex;
    flex-direction: column;
    height: 100vh;
    color: #222;
  }

  /* Overlay to fade the flag */
  body::before {
    content: "";
    position: fixed;
    top: 0; left: 0; right: 0; bottom: 0;
    background: rgba(255, 255, 255, 0.85);
    pointer-events: none;
    z-index: 0;
  }

  header {
    background-color: #002868;
    color: white;
    padding: 1.5rem;
    text-align: center;
    font-weight: bold;
    font-size: 1.8rem;
    letter-spacing: 2px;
    position: relative;
    z-index: 1;
    font-family: 'Bebas Neue', cursive;
    user-select: none;
  }

  main {
    flex: 1;
    display: flex;
    flex-direction: column;
    max-width: 600px;
    margin: 1.5rem auto 2rem;
    background: white;
    border-radius: 12px;
    box-shadow: 0 8px 24px rgb(0 0 0 / 0.2);
    overflow: hidden;
    position: relative;
    z-index: 1;
  }

  #chat {
    flex: 1;
    padding: 1rem 1.5rem;
    overflow-y: auto;
    background: #f9f9f9;
    border-bottom: 2px solid #b22234;
  }

  .message {
    max-width: 80%;
    margin-bottom: 1rem;
    padding: 10px 16px;
    border-radius: 20px;
    font-size: 1rem;
    line-height: 1.4;
    word-wrap: break-word;
  }

  .message.user {
    background-color: #002868;
    color: white;
    margin-left: auto;
    border-bottom-right-radius: 2px;
  }

  .message.partner {
    background-color: #b22234;
    color: white;
    margin-right: auto;
    border-bottom-left-radius: 2px;
  }

  form {
    display: flex;
    padding: 12px 16px;
    border-top: 2px solid #b22234;
    background: #fff;
  }

  input[type="text"] {
    flex-grow: 1;
    padding: 10px 15px;
    font-size: 1rem;
    border-radius: 30px;
    border: 1.5px solid #ccc;
    outline: none;
    transition: border-color 0.2s ease;
  }
  input[type="text"]:focus {
    border-color: #002868;
  }

  button {
    background-color: #002868;
    border: none;
    color: white;
    font-weight: bold;
    padding: 0 1.2rem;
    margin-left: 12px;
    border-radius: 30px;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }
  button:hover {
    background-color: #b22234;
  }

  /* Scrollbar styling */
  #chat::-webkit-scrollbar {
    width: 8px;
  }
  #chat::-webkit-scrollbar-thumb {
    background-color: #b22234;
    border-radius: 4px;
  }

  /* Responsive */
  @media (max-width: 640px) {
    main {
      margin: 1rem;
      width: 100%;
      border-radius: 0;
    }
  }
</style>
</head>
<body>
<header>Chat Room â€” Power to the People ðŸ—½</header>
<main>
  <div id="chat" aria-live="polite" aria-label="Chat messages"></div>
  <form id="chatForm" aria-label="Send a message">
    <input
      type="text"
      id="messageInput"
      placeholder="Type your message here..."
      autocomplete="off"
      required
      aria-required="true"
      aria-describedby="inputHelp"
    />
    <button type="submit" aria-label="Send message">Send</button>
  </form>
</main>

<script>
  const chat = document.getElementById('chat');
  const form = document.getElementById('chatForm');
  const input = document.getElementById('messageInput');

  // Function to append messages
  function appendMessage(text, sender) {
    const msg = document.createElement('div');
    msg.textContent = text;
    msg.className = 'message ' + sender;
    chat.appendChild(msg);
    chat.scrollTop = chat.scrollHeight;
  }

  // Simulated partner replies (optional fun)
  const partnerReplies = [
    "Hello!",
    "Thanks for sharing.",
    "Interesting point!",
    "Could you tell me more?",
    "I agree with that.",
    "Let's keep the conversation respectful.",
    "What do you think about the current administration?",
    "The people have the power!",
    "Stay informed and engaged!",
  ];

  // Append a welcome message from partner
  appendMessage("Welcome to the chat! Feel free to say hello.", "partner");

  form.addEventListener('submit', e => {
    e.preventDefault();
    const text = input.value.trim();
    if (!text) return;

    appendMessage(text, 'user');
    input.value = '';

    // Simulate a partner reply after a delay
    setTimeout(() => {
      const reply = partnerReplies[Math.floor(Math.random() * partnerReplies.length)];
      appendMessage(reply, 'partner');
    }, 1200);
  });
</script>
</body>
</html>
